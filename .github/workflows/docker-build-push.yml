name: Build, Push, and Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: brush-targeting
  SERVICE_NAME: brush-targeting # Coincident these are the same

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build and push the Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile # NOT building from full compose
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/javelina-works/{{ env.IMAGE_NAME }}:latest
            ghcr.io/javelina-works/{{ env.IMAGE_NAME }}:${{ github.sha }}
            ghcr.io/javelina-works/{{ env.IMAGE_NAME }}:${{ github.ref_name }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-push # Ensure deployment only happens after the build-push job succeeds

    steps:
      # Install Railway CLI
      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          export PATH="$HOME/.railway/bin:$PATH"

      # Deploy to Railway
      - name: Deploy to Railway
        env:
          # RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_BRUSH_T_TOKEN }}
        run: |
          RAILWAY_TOKEN=$RAILWAY_TOKEN railway redeploy --service {{ env.SERVICE_NAME }} -y
